import telebot
from telebot import types
import pandas as pd 
import random2
import pickle

bot = telebot.TeleBot('6719752669:AAFwkOODXVCbhJzgJ9m3-l5afDXmmTXeySs')

global id_link_1
global id_link_2

def id_cleaner(girl_id):
    return 'https://ies.unitech-mo.ru/user?userid=' + girl_id[6:]

def get_random_number(user_id):

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id in users_state:
        user_numbers = users_state[user_id]  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —á–∏—Å–µ–ª –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    else:
        user_numbers = []  # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —á–∏—Å–µ–ª –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        users_state[user_id] = user_numbers  # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä—å

    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –æ–±—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π
    random_girl_IDs = random2.sample([i for i in range(0, len(df['Link'])) if i not in users_state.get(user_id, [])], 1)

    while random_girl_IDs in users_state.get(user_id, []):
        random_girl_IDs = random2.sample([i for i in range(0, len(df['Link'])) if i not in users_state.get(user_id, [])], 1)
    else:   
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —á–∏—Å–ª–∞ –≤ —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —á–∏—Å–µ–ª –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_numbers.extend(random_girl_IDs)

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è –≤ —Ñ–∞–π–ª–µ
    with open('users_state.pickle', 'wb') as users_state_log:
        pickle.dump(users_state, users_state_log)

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —á–∏—Å–ª–∞
    return list(df.iloc[random_girl_IDs].squeeze())
    

@bot.message_handler(commands=['start']) 
def start(message): # message -- –≤—Å—è –∏–Ω—Ñ–∞ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞') 
    btn2 = types.KeyboardButton('ü•∞–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é') 
    btn3 = types.KeyboardButton('üìã–ü—Ä–∞–≤–∏–ª–∞') 
    markup.add(btn1, btn2, btn3) # –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω —Å —Ü–µ–ª—å—é –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–∞–º—É—é –∫—Ä–∞—Å–∏–≤—É—é –¥–µ–≤—É—à–∫—É –≤ –Ω–∞—à–µ–º —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ.", reply_markup=markup) 
    bot.register_next_step_handler(message, on_click_menu)

def on_click_menu(message):
    if message.text == 'üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn3 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥')
        markup.add(btn3)
        bot.send_message(message.chat.id, "–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–∞–º—ã–π –∫—Ä–∞—Å–∏–≤—ã—Ö –¥–µ–≤—É—à–µ–∫ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É.", reply_markup=markup) 
        bot.register_next_step_handler(message, on_click_test)

    elif message.text == 'ü•∞–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é':
        global id_link_1
        global id_link_2
        # –ó–∞–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('‚óÄÔ∏è –õ–µ–≤–∞—è') 
        btn2 = types.KeyboardButton('‚ñ∂Ô∏è –ü—Ä–∞–≤–∞—è')
        btn3 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥')
        markup.add(btn1, btn2, btn3) # –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é

        # —Å–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å types —Ñ–∞–π–ª–æ–≤ –∏ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Ñ–æ—Ç–æ
        id_link_1 = get_random_number(message.from_user.id)
        id_link_2 = get_random_number(message.from_user.id)    

        # –°–æ—Å—Ç–∞–≤–∏–º —Å–ø–∏—Å–æ–∫ –∏–∑ —Ñ–æ—Ç–æ
        photos = [types.InputMediaPhoto(id_link_1[0]), types.InputMediaPhoto(id_link_2[0])] 

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º 2 —Ñ–æ—Ç–æ –∏ —Ñ—Ä–∞–∑—É —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        bot.send_media_group(message.chat.id, photos) 
        bot.send_message(message.from_user.id, 
        f"<a href='{id_cleaner(id_link_1[2])}'>{id_link_1[1]}</a> –∏–ª–∏<a href='{id_cleaner(id_link_2[2])}'>{id_link_2[1]}</a>?",
        parse_mode='HTML', reply_markup=markup) 

        # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ–π—Å–≤–∏—é –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
        bot.register_next_step_handler(message, on_click_test)

    elif message.text == 'üìã–ü—Ä–∞–≤–∏–ª–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn3 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥')
        markup.add(btn3)
        bot.send_message(message.chat.id, 
        "–¢–µ–±–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ñ–æ—Ç–æ –¥–≤—É—Ö –¥–µ–≤—É—à–µ–∫, —Ç—ã –¥–æ–ª–∂–µ–Ω –Ω–∞–∂–∞—Ç—å –Ω–∞ —Å—Ç—Ä–µ–ª–∫—É —É–∫–∞–∑—ã–≤–∞—é—â—É—é –Ω–∞ –¥–µ–≤—É—à–∫—É, –∫–æ—Ç–æ—Ä–∞—è —Ç–µ–±–µ –±–æ–ª—å—à–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å. –ù–∞–∂–∞–≤ –Ω–∞ –∏–º—è —Ç—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –¥–µ–≤—É—à–∫–∏ –Ω–∞ –Ω–∞—à–µ–º –ø–æ—Ä—Ç–∞–ª–µ.", reply_markup=markup) 
        bot.register_next_step_handler(message, on_click_test)


@bot.message_handler(commands=['test'])
def test(message):
    global id_link_1
    global id_link_2
    # –ó–∞–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('‚óÄÔ∏è –õ–µ–≤–∞—è') 
    btn2 = types.KeyboardButton('‚ñ∂Ô∏è –ü—Ä–∞–≤–∞—è')
    btn3 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥')
    markup.add(btn1, btn2, btn3) # –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é

    # —Å–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å types —Ñ–∞–π–ª–æ–≤ –∏ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Ñ–æ—Ç–æ
    id_link_1 = get_random_number(message.from_user.id)
    id_link_2 = get_random_number(message.from_user.id)    

    # –°–æ—Å—Ç–∞–≤–∏–º —Å–ø–∏—Å–æ–∫ –∏–∑ —Ñ–æ—Ç–æ
    photos = [types.InputMediaPhoto(id_link_1[0]), types.InputMediaPhoto(id_link_2[0])] 

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º 2 —Ñ–æ—Ç–æ –∏ —Ñ—Ä–∞–∑—É —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    bot.send_media_group(message.chat.id, photos) 
    bot.send_message(message.from_user.id, 
    f"<a href='{id_cleaner(id_link_1[2])}'>{id_link_1[1]}</a> –∏–ª–∏<a href='{id_cleaner(id_link_2[2])}'>{id_link_2[1]}</a>?",
    parse_mode='HTML', reply_markup=markup) 

    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ–π—Å–≤–∏—é –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
    bot.register_next_step_handler(message, on_click_test)

def on_click_test(message):
    global id_link_1
    global id_link_2

    if message.text == '‚óÄÔ∏è –õ–µ–≤–∞—è':
       # –ó–∞–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('‚óÄÔ∏è –õ–µ–≤–∞—è') 
        btn2 = types.KeyboardButton('‚ñ∂Ô∏è –ü—Ä–∞–≤–∞—è')
        btn3 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥')
        markup.add(btn1, btn2, btn3) # –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é

        # —Å–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å types —Ñ–∞–π–ª–æ–≤ –∏ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Ñ–æ—Ç–æ
        id_link_2 = get_random_number(message.from_user.id)
        photos = [types.InputMediaPhoto(id_link_1[0]),
        types.InputMediaPhoto(id_link_2[0])] 

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º 2 —Ñ–æ—Ç–æ –∏ —Ñ—Ä–∞–∑—É —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        bot.send_media_group(message.chat.id, photos) 
        bot.send_message(message.from_user.id, 
        f"<a href='{id_cleaner(id_link_1[2])}'>{id_link_1[1]}</a> –∏–ª–∏<a href='{id_cleaner(id_link_2[2])}'>{id_link_2[1]}</a>?", 
        parse_mode='HTML', reply_markup=markup)

        # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ–π—Å–≤–∏—é –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
        bot.register_next_step_handler(message, on_click_test)

    elif message.text == '‚ñ∂Ô∏è –ü—Ä–∞–≤–∞—è':
        # –ó–∞–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('‚óÄÔ∏è –õ–µ–≤–∞—è') 
        btn2 = types.KeyboardButton('‚ñ∂Ô∏è –ü—Ä–∞–≤–∞—è')
        btn3 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥')
        markup.add(btn1, btn2, btn3) # –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é

        # —Å–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å types —Ñ–∞–π–ª–æ–≤ –∏ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Ñ–æ—Ç–æ
        id_link_1 = get_random_number(message.from_user.id)
        photos = [types.InputMediaPhoto(id_link_1[0]),
        types.InputMediaPhoto(id_link_2[0])] 

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º 2 —Ñ–æ—Ç–æ –∏ —Ñ—Ä–∞–∑—É —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        bot.send_media_group(message.chat.id, photos) 
        bot.send_message(message.from_user.id, 
        f"<a href='{id_cleaner(id_link_1[2])}'>{id_link_1[1]}</a> –∏–ª–∏<a href='{id_cleaner(id_link_2[2])}'>{id_link_2[1]}</a>?", 
        parse_mode='HTML', reply_markup=markup) 

        # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ–π—Å–≤–∏—é –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
        bot.register_next_step_handler(message, on_click_test)

    elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞') 
        btn2 = types.KeyboardButton('ü•∞–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é') 
        btn3 = types.KeyboardButton('üìã–ü—Ä–∞–≤–∏–ª–∞') 
        markup.add(btn1, btn2, btn3) # –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.", reply_markup=markup)
        bot.register_next_step_handler(message, on_click_menu)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ñ–∞–π–ª—É —Å –¥–∞–Ω–Ω—ã–º–∏
df = pd.read_csv('./bio.txt', encoding='utf-8', header=None)
df.columns = ['Link', 'Surname', 'Name', 'Group', 'Id']
df = df[['Link', 'Name', 'Id']]

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ª–æ–≤–∞—Ä—è –∏–∑ —Ñ–∞–π–ª–∞
try:
    with open('users_state.pickle', 'rb') as users_state_log:
        users_state = pickle.load(users_state_log)
except FileNotFoundError:
    users_state = {}



# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–º —Ñ–æ—Ç–æ
# with open('users_state.pickle', 'rb') as f: 
#     print(pickle.load(f))

bot.infinity_polling()